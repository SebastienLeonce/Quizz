<!DOCTYPE html>
<html>
<head>
  <title><%= title %></title>
  <link rel='stylesheet' href='/stylesheets/style.css' />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/uikit@3.6.22/dist/css/uikit.min.css" />
  <script src="https://cdn.jsdelivr.net/npm/uikit@3.6.22/dist/js/uikit.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/uikit@3.6.22/dist/js/uikit-icons.min.js"></script>
  <script src="https://unpkg.com/vue/dist/vue.js"></script>
  <script src="/socket.io/socket.io.js"></script>
</head>
<body>
  <div id="app" class="uk-height-viewport uk-flex uk-flex-middle uk-flex-center">
    <div v-if="views.login">
      <login 
        v-bind:socket="this.socket"
        v-bind:username="this.username" 
        @update-username="update">
      </login>
    </div>
    <div v-else><%- include('dashboard'); %></div>
  </div> 
</body>
<script>
  Vue.component('login', {
    data: function () {
      return {
        password: '',
        username_: this.username,
        loginError: false,
      }
    },
    methods: {
      login(e) {
        e.preventDefault();
        this.socket.auth = {};

        this.socket.auth.username = this.username;
        this.socket.auth.password = this.password;
        this.password = "";
        this.socket.connect();
      }
    },
    props: {
      socket: Object,
      username: String
    },
    watch:{
      username_ (val) {
        this.$emit("update-username", val);
     }
    },
    template: `<%- include('login'); %>`
  });

  new Vue({
    el: '#app',
    data() {
      return {
        socket: io({ autoConnect: false }),
        username: '',
        password: '',
        views: {
          login: true,
        },
        loginError: false,
      }
    },
    methods: {
      logout() {
        localStorage.removeItem('sessionID');
        this.socket.disconnect();
        this.socket.auth = {};
        this.views.login = true;
      },
      update(username) {
        this.username = username;
      },
    },
    mounted() {
      this.socket.auth = {};

      this.socket.on("session", ({ sessionID, userID, username }) => {
        this.socket.auth.sessionID = sessionID;
        this.socket.userID = userID;
        this.username = username;
        this.views.login = false;
        localStorage.setItem("sessionID", sessionID);
      });

      const sessionID = localStorage.getItem("sessionID");
      if (sessionID) {
        this.socket.auth = { sessionID };
        this.socket.connect();
      }

      this.socket.on("connect_error", (err) => {
        console.log(err)
        this.views.login = true;
        this.loginError = true;
      });
    },
    destroyed() {
      socket.off("connect_error");
    },
  });
</script>
</html>